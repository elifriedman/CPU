MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001     LIST        P=PIC16F877A
                      00002     include <p16F877A.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877A processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2014 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00566         LIST
                      00003     include "constants.inc"
                      00001 
                      00002 ;----- Instruction Registers -----------------------------------------------------
  00000120            00003 PC equ 0x120 ; Program counter (Bank2)
  00000121            00004 INSTR1 equ 0x121 ; Memory location of MSB of instruction (Bank2)
  00000122            00005 INSTR2 equ 0x122 ; Memory location of LSB of instruction (Bank2)
  00000123            00006 writeVal    equ 0x123
  00000124            00007 Rc     equ 0x124
                      00008 
                      00009 ;---- Constants -----------------------------------------------------
  00000020            00010 ZZ equ H'20'
  00000010            00011 CC equ H'10'
                      00012 
                      00013 ;---- Instructions -----------------------------------------------------
  00000000            00014 NOP2 equ B'00000000'; 0000 xxxx xxxx xxxx
  00000010            00015 ADD equ B'00010000' ; 0001 aaaa bbbb cccc    Z,C     Ra = Rb + Rc
  00000020            00016 SUB equ B'00100000' ; 0010 aaaa bbbb cccc    Z,C     Ra = Rb ­ Rc
  00000030            00017 AND equ B'00110000' ; 0011 aaaa bbbb cccc    Z,C     Ra = Rb & Rc
  00000040            00018 IOR equ B'01000000' ; 0100 aaaa bbbb cccc    Z,C     Ra = Rb | Rc
  00000050            00019 XOR equ B'01010000' ; 0101 aaaa bbbb cccc    Z,C     Ra = Rb ^ Rc
  00000060            00020 RRL equ B'01100000' ; 0110 aaaa 0xxx bbbb    C       Ra = Rb rotated left by 1 thru C
  00000060            00021 RRR equ B'01100000' ; 0110 aaaa 1xxx bbbb    C       Ra = Rb rotated right by 1 thru C
  00000070            00022 NOT equ B'01110000' ; 0111 aaaa xxxx bbbb    Z       Ra = ~Rb
  00000080            00023 MOV equ B'10000000' ; 1000 aaaa 1xxx bbbb    Z       Ra = Rb
  00000080            00024 MOV equ B'10000000' ; 1000 aaaa 0xxx kkkk    Z       Ra = k
  00000090            00025 LOD equ B'10010000' ; 1001 aaaa 0kkk kkkk    Z       Ra = [k]
  00000090            00026 LOD equ B'10010000' ; 1001 aaaa 1xxx bbbb    Z       Ra = [Rb(3:1) Rb+1]
  000000A0            00027 STO equ B'10100000' ; 1010 aaaa 0kkk kkkk    Z       [k] = Ra
  000000A0            00028 STO equ B'10100000' ; 1010 aaaa 1xxx bbbb    Z       [Ra(3:1) Ra+1] = Rb
  000000B0            00029 TSC equ B'10110000' ; 1011 aaaa 0xxx xxbb    -       if Ra(b) = 0, PC=PC+2
  000000B0            00030 TSS equ B'10110000' ; 1011 aaaa 1xxx xxbb    -       if Ra(b) = 1, PC=PC+2
  000000C0            00031 JMP equ B'11000000' ; 1100 0kkk kkkk kkkk    -       PC=k<<1 // since instructions are two bytes
  000000C0            00032 JMP equ B'11000000' ; 1100 1xxx xxxx aaaa    -       PC=[Ra(3:1) Ra+1]<<1
  000000D0            00033 JSR equ B'11010000' ; 1101 0kkk kkkk kkkk    -       PC+2->STACK_TOP; PC=k<<1
  000000D0            00034 JSR equ B'11010000' ; 1101 1xxx xxxx aaaa    -       PC+2->STACK_TOP; PC=[Ra(3:1) Ra+1]<<1
  000000E0            00035 RET equ B'11100000' ; 1110 xxxx xxxx xxxx    -       PC <- STACK_TOP
                      00036 
                      00037 
                      00038 
                      00039 
                      00040 
                      00041 ;----- Register Files -----------------------------------------------------
MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000070            00042 R0 equ 0x70
  00000071            00043 R1 equ 0x71
  00000072            00044 R2 equ 0x72
  00000073            00045 R3 equ 0x73
  00000074            00046 R4 equ 0x74
  00000075            00047 R5 equ 0x75
  00000076            00048 R6 equ 0x76
  00000077            00049 R7 equ 0x77
  00000078            00050 R8 equ 0x78
  00000079            00051 R9 equ 0x79
  0000007A            00052 R10 equ 0x7A
  0000007B            00053 R11 equ 0x7B
  0000007C            00054 R12 equ 0x7C
  0000007D            00055 R13 equ 0x7D
  0000007E            00056 R14 equ 0x7E ; BANK SELECT register
  0000007F            00057 R15 equ 0x7F ; STATUS register [- - Z C] (bank0)
2007   3F72           00004     __CONFIG _HS_OSC & _WDT_OFF & _PWRTE_ON & _CP_OFF & _LVP_OFF
                      00005 
                      00006 
                      00007 
                      00008     ORG 0x00
0000   1283 1703      00009     banksel PC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0002   01A0           00010     clrf    PC
0003   1683 1303      00011     banksel ADCON1 ; set PORTA as input
0005   3006           00012     movlw   0x06
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0006   009F           00013     movwf   ADCON1
0007   30FF           00014     movlw   0xFF
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   0085           00015     movwf   TRISA ; PORTA = result from ALU and Z and C
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0009   0186           00016     clrf    TRISB ; PORTB = input to ALU aaaa bbbb
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000A   0187           00017     clrf    TRISC ; PORTC = input to ALU instruction select
000B   2???           00018     goto start
                      00019 
                      00020 
                      00021 
000C                  00022 readReg ; Read register, assuming non-offset reg address is in W already
000C   3E70           00023     addlw   R0  ; offset to actual register locations
000D   0084           00024     movwf   FSR ; indirect addressing
000E   0800           00025     movf    INDF,W;
000F   0008           00026     return
                      00027 
0010                  00028 writeReg ; Write to register, assuming non-offset reg address is in W already
0010   3E70           00029     addlw   R0 ; and value to write is in writeVal
0011   0084           00030     movwf   FSR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0012   0823           00031     movf    writeVal,W;
0013   0080           00032     movwf   INDF
0014   0008           00033     return;
                      00034 
MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0015                  00035 writeStatus ; sets R15, the Status register [- - Z C]
0015   01FF           00036     clrf    R15
Warning[202]: Argument out of range.  Least significant bits used.
0016   1C05           00037     btfss   PORTA,ZZ ;get status from PORTA
0017   147F           00038         bsf   R15,0  ; set C bit
Warning[202]: Argument out of range.  Least significant bits used.
0018   1C05           00039     btfss   PORTA,CC
0019   14FF           00040         bsf   R15,1  ; set Z bit
001A   0008           00041     return
                      00042 
001B                  00043 readInstr ; Read Instruction from EEPROM
001B   1703           00044     bsf     STATUS,RP1;
001C   1283           00045     bcf     STATUS,RP0; Go to BANK2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
001D   0820           00046     movf    PC,W
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
001E   0AA0           00047     incf    PC,F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
001F   008D           00048     movwf   EEADR ; set EEPROM address to read from
0020   1683           00049     bsf     STATUS,RP0; EECON1 is in BANK3
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0021   138C           00050     bcf     EECON1,EEPGD ; ready to read from EEPROM
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0022   140C           00051     bsf     EECON1,RD ; Data ready now.
0023   1283           00052     bcf     STATUS, RP0 ; BANK2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0024   080C           00053     movf        EEDATA, W;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0025   00A1           00054     movwf   INSTR1;
                      00055 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0026   0820           00056     movf    PC,W
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0027   0AA0           00057     incf    PC,F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0028   008D           00058     movwf   EEADR ; set EEPROM address to read from
0029   1683           00059     bsf     STATUS,RP0; EECON1 is in BANK3
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
002A   138C           00060     bcf     EECON1,EEPGD ; ready to read from EEPROM
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
002B   140C           00061     bsf     EECON1,RD ; Data ready now.
002C   1283           00062     bcf     STATUS, RP0 ; BANK2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
002D   080C           00063     movf        EEDATA, W;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
002E   00A2           00064     movwf   INSTR2;
002F   0008           00065     RETURN
                      00066 
0030                  00067 execInstr ; Execute Instruction
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0030   0821           00068     movf    INSTR1,W
0031   39F0           00069     andlw   0xF0    ; extract upper 4 bits
                      00070 
MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0032   3A00           00071     xorlw   NOP2    ; xoring will make W=0 and Z=1 if they match
0033   1903           00072     btfsc   STATUS,Z
0034   2???           00073     goto    inop2
0035   3A10           00074     xorlw   ADD^NOP2 ; :::::: ADD
0036   1903           00075     btfsc   STATUS,Z
0037   2???           00076     goto    iadd
                      00077 
0038   3A30           00078     xorlw   SUB^ADD  ; :::::: SUB
0039   1903           00079     btfsc   STATUS,Z
003A   2???           00080     goto    isub
                      00081 
003B   3A10           00082     xorlw   AND^SUB  ; :::::: AND
003C   1903           00083     btfsc   STATUS,Z
003D   2???           00084     goto    iand
                      00085 
003E   3A70           00086     xorlw   IOR^AND  ; :::::: OR
003F   1903           00087     btfsc   STATUS,Z
0040   2???           00088     goto    ior
                      00089 
0041   3A10           00090     xorlw   XOR^IOR  ; :::::: XOR
0042   1903           00091     btfsc   STATUS,Z
0043   2???           00092     goto    ixor
                      00093 
0044                  00094 inop2 ; NOP instruction
0044   2???           00095     goto start
                      00096 
0045                  00097 iadd ; ADD instruction
                      00098 
                      00099 ; Write Rc to PORTB<7:4>
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0045   0822           00100     movf    INSTR2,W
0046   390F           00101     andlw   0x0F ;
0047   2???           00102     call    readReg ; get Rc
0048   1283 1303      00103     banksel PORTB
004A   0086           00104     movwf   PORTB
004B   0E86           00105     swapf   PORTB,F ; PORTB = cccc0000
                      00106 
                      00107 ; Write Rb to PORTB<3:0>
004C   1283 1703      00108     banksel INSTR2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
004E   0EA2           00109     swapf   INSTR2,F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
004F   0822           00110     movf    INSTR2,W
0050   390F           00111     andlw   0x0F
0051   2???           00112     call    readReg ; get Rb
0052   1283 1303      00113     banksel PORTB
0054   0486           00114     iorwf   PORTB,F ; PORTB = ccccbbbb
                      00115 
                      00116 ; Get result from ALU
0055   3010           00117     movlw   ADD
0056   0087           00118     movwf   PORTC ; ALU Add
0057   0805           00119     movf    PORTA,W
                      00120 ; Write Z,C
MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0058   2???           00121     call    writeStatus
                      00122 
                      00123 ; Write to Ra
0059   1283 1703      00124     banksel INSTR1
005B   390F           00125     andlw   0x0F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
005C   00A3           00126     movwf   writeVal
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
005D   0821           00127     movf    INSTR1,W
005E   390F           00128     andlw   0x0F ; 
                      00129 
005F   2???           00130     call    writeReg ; Ra = Rb + Rc
                      00131     
0060   2???           00132     goto start
                      00133 
0061                  00134 isub ; SUB instruction
                      00135  ; Write Rc to PORTB<7:4>
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0061   0822           00136     movf    INSTR2,W
0062   390F           00137     andlw   0x0F ;
0063   2???           00138     call    readReg ; get Rc
0064   1283 1303      00139     banksel PORTB
0066   0086           00140     movwf   PORTB
0067   0E86           00141     swapf   PORTB,F ; PORTB = cccc0000
                      00142 
                      00143 ; Write Rb to PORTB<3:0>
0068   1283 1703      00144     banksel INSTR2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
006A   0EA2           00145     swapf   INSTR2,F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
006B   0822           00146     movf    INSTR2,W
006C   390F           00147     andlw   0x0F
006D   2???           00148     call    readReg ; get Rb
006E   1283 1303      00149     banksel PORTB
0070   0486           00150     iorwf   PORTB,F ; PORTB = ccccbbbb
                      00151 
                      00152 ; Get result from ALU
0071   3020           00153     movlw   SUB
0072   0087           00154     movwf   PORTC ; ALU Add
0073   0805           00155     movf    PORTA,W
                      00156 ; Write Z,C
0074   2???           00157     call    writeStatus
                      00158 
                      00159 ; Write to Ra
0075   1283 1703      00160     banksel INSTR1
0077   390F           00161     andlw   0x0F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0078   00A3           00162     movwf   writeVal
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0079   0821           00163     movf    INSTR1,W
007A   390F           00164     andlw   0x0F ;
                      00165 
007B   2???           00166     call    writeReg ; Ra = Rb + Rc
MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00167 
007C   2???           00168     goto start
                      00169 
007D                  00170 iand ; SUB instruction
                      00171  ; Write Rc to PORTB<7:4>
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
007D   0822           00172     movf    INSTR2,W
007E   390F           00173     andlw   0x0F ;
007F   2???           00174     call    readReg ; get Rc
0080   1283 1303      00175     banksel PORTB
0082   0086           00176     movwf   PORTB
0083   0E86           00177     swapf   PORTB,F ; PORTB = cccc0000
                      00178 
                      00179 ; Write Rb to PORTB<3:0>
0084   1283 1703      00180     banksel INSTR2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0086   0EA2           00181     swapf   INSTR2,F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0087   0822           00182     movf    INSTR2,W
0088   390F           00183     andlw   0x0F
0089   2???           00184     call    readReg ; get Rb
008A   1283 1303      00185     banksel PORTB
008C   0486           00186     iorwf   PORTB,F ; PORTB = ccccbbbb
                      00187 
                      00188 ; Get result from ALU
008D   3030           00189     movlw   AND
008E   0087           00190     movwf   PORTC ; ALU Add
008F   0805           00191     movf    PORTA,W
                      00192 ; Write Z,C
0090   2???           00193     call    writeStatus
                      00194 
                      00195 ; Write to Ra
0091   1283 1703      00196     banksel INSTR1
0093   390F           00197     andlw   0x0F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0094   00A3           00198     movwf   writeVal
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0095   0821           00199     movf    INSTR1,W
0096   390F           00200     andlw   0x0F ;
                      00201 
0097   2???           00202     call    writeReg ; Ra = Rb + Rc
                      00203 
0098   2???           00204     goto start
                      00205 
0099                  00206 ior ; SUB instruction
                      00207  ; Write Rc to PORTB<7:4>
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0099   0822           00208     movf    INSTR2,W
009A   390F           00209     andlw   0x0F ;
009B   2???           00210     call    readReg ; get Rc
009C   1283 1303      00211     banksel PORTB
009E   0086           00212     movwf   PORTB
009F   0E86           00213     swapf   PORTB,F ; PORTB = cccc0000
MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00214 
                      00215 ; Write Rb to PORTB<3:0>
00A0   1283 1703      00216     banksel INSTR2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A2   0EA2           00217     swapf   INSTR2,F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A3   0822           00218     movf    INSTR2,W
00A4   390F           00219     andlw   0x0F
00A5   2???           00220     call    readReg ; get Rb
00A6   1283 1303      00221     banksel PORTB
00A8   0486           00222     iorwf   PORTB,F ; PORTB = ccccbbbb
                      00223 
                      00224 ; Get result from ALU
00A9   3040           00225     movlw   IOR
00AA   0087           00226     movwf   PORTC ; ALU Add
00AB   0805           00227     movf    PORTA,W
                      00228 ; Write Z,C
00AC   2???           00229     call    writeStatus
                      00230 
                      00231 ; Write to Ra
00AD   1283 1703      00232     banksel INSTR1
00AF   390F           00233     andlw   0x0F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00B0   00A3           00234     movwf   writeVal
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00B1   0821           00235     movf    INSTR1,W
00B2   390F           00236     andlw   0x0F ;
                      00237 
00B3   2???           00238     call    writeReg ; Ra = Rb + Rc
                      00239 
00B4   2???           00240     goto start
                      00241 
00B5                  00242 ixor ; SUB instruction
                      00243  ; Write Rc to PORTB<7:4>
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00B5   0822           00244     movf    INSTR2,W
00B6   390F           00245     andlw   0x0F ;
00B7   2???           00246     call    readReg ; get Rc
00B8   1283 1303      00247     banksel PORTB
00BA   0086           00248     movwf   PORTB
00BB   0E86           00249     swapf   PORTB,F ; PORTB = cccc0000
                      00250 
                      00251 ; Write Rb to PORTB<3:0>
00BC   1283 1703      00252     banksel INSTR2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BE   0EA2           00253     swapf   INSTR2,F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BF   0822           00254     movf    INSTR2,W
00C0   390F           00255     andlw   0x0F
00C1   2???           00256     call    readReg ; get Rb
00C2   1283 1303      00257     banksel PORTB
00C4   0486           00258     iorwf   PORTB,F ; PORTB = ccccbbbb
                      00259 
MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00260 ; Get result from ALU
00C5   3050           00261     movlw   XOR
00C6   0087           00262     movwf   PORTC ; ALU Add
00C7   0805           00263     movf    PORTA,W
                      00264 ; Write Z,C
00C8   2???           00265     call    writeStatus
                      00266 
                      00267 ; Write to Ra
00C9   1283 1703      00268     banksel INSTR1
00CB   390F           00269     andlw   0x0F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00CC   00A3           00270     movwf   writeVal
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00CD   0821           00271     movf    INSTR1,W
00CE   390F           00272     andlw   0x0F ;
                      00273 
00CF   2???           00274     call    writeReg ; Ra = Rb + Rc
                      00275 
00D0   2???           00276     goto start
                      00277 
                      00278 
                      00279 
                      00280 
00D1                  00281 start
00D1   2???           00282     call    readInstr;
00D2   2???           00283     goto    execInstr;
00D3   2???           00284     goto    start
3F72                  00285     end
MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE  9


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADD                               00000010
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AND                               00000030
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRGH                              00000002
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CC                                00000010
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE 10


SYMBOL TABLE
  LABEL                             VALUE 

CHS2                              00000005
CIS                               00000003
CKE                               00000006
CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INSTR1                            00000121
INSTR2                            00000122
INTCON                            0000000B
INTE                              00000004
MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE 11


SYMBOL TABLE
  LABEL                             VALUE 

INTEDG                            00000006
INTF                              00000001
IOR                               00000040
IRP                               00000007
JMP                               000000C0
JSR                               000000D0
LOD                               00000090
MOV                               00000080
NOP2                              00000000
NOT                               00000070
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PC                                00000120
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE 12


SYMBOL TABLE
  LABEL                             VALUE 

PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
R0                                00000070
R1                                00000071
R10                               0000007A
R11                               0000007B
R12                               0000007C
R13                               0000007D
R14                               0000007E
R15                               0000007F
R2                                00000072
R3                                00000073
R4                                00000074
R5                                00000075
R6                                00000076
R7                                00000077
R8                                00000078
R9                                00000079
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE 13


SYMBOL TABLE
  LABEL                             VALUE 

RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RET                               000000E0
RP0                               00000005
RP1                               00000006
RRL                               00000060
RRR                               00000060
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
Rc                                00000124
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STO                               000000A0
SUB                               00000020
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE 14


SYMBOL TABLE
  LABEL                             VALUE 

T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE 15


SYMBOL TABLE
  LABEL                             VALUE 

TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TSC                               000000B0
TSS                               000000B0
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
XOR                               00000050
Z                                 00000002
ZZ                                00000020
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_BOREN_OFF                        00003FBF
_BOREN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_CP_ON                            00001FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
MPASM 5.55  /USERS/ELIFRIEDMAN/DOCUMENTS/SCH   5-13-2014  19:47:18         PAGE 16


SYMBOL TABLE
  LABEL                             VALUE 

_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F877A                         00000001
execInstr                         00000030
iadd                              00000045
iand                              0000007D
inop2                             00000044
ior                               00000099
isub                              00000061
ixor                              000000B5
readInstr                         0000001B
readReg                           0000000C
start                             000000D1
writeReg                          00000010
writeStatus                       00000015
writeVal                          00000123

Errors   :     0
Warnings :     2 reported,     0 suppressed
Messages :    46 reported,     0 suppressed

